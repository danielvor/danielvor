
// Estado do chatbot
let isChatbotOpen = false;

// Fun√ß√µes de UI
function toggleChatbot() {
    const container = document.getElementById('chatbot-container');
    isChatbotOpen = !isChatbotOpen;
    
    if (isChatbotOpen) {
        container.classList.add('active');
        document.getElementById('chatbot-input').focus();
    } else {
        container.classList.remove('active');
    }
}

function handleKeyPress(event) {
    if (event.key === 'Enter') {
        sendMessage();
    }
}

function addMessage(text, sender) {
    const messagesContainer = document.getElementById('chatbot-messages');
    const messageDiv = document.createElement('div');
    messageDiv.className = `message ${sender}-message`;
    
    const now = new Date();
    const timeString = now.toLocaleTimeString('pt-BR', { 
        hour: '2-digit', 
        minute: '2-digit' 
    });
    
    messageDiv.innerHTML = `
        <div class="message-content">${text}</div>
        <div class="message-time">${timeString}</div>
    `;
    
    messagesContainer.appendChild(messageDiv);
    messagesContainer.scrollTop = messagesContainer.scrollHeight;
}

function showTypingIndicator() {
    const messagesContainer = document.getElementById('chatbot-messages');
    const typingDiv = document.createElement('div');
    typingDiv.className = 'message bot-message';
    typingDiv.id = 'typing-indicator';
    typingDiv.innerHTML = `
        <div class="message-content">
            <div class="typing-dots">
                <span></span>
                <span></span>
                <span></span>
            </div>
        </div>
    `;
    messagesContainer.appendChild(typingDiv);
    messagesContainer.scrollTop = messagesContainer.scrollHeight;
}

function hideTypingIndicator() {
    const typingIndicator = document.getElementById('typing-indicator');
    if (typingIndicator) {
        typingIndicator.remove();
    }
}

// Base de Conhecimento do Daniel
function getDanielResponse(message) {
    const lower = message.toLowerCase();
    
    // Base de conhecimento personalizada
    const knowledgeBase = {
        // Sauda√ß√£o
        'oi|ol√°|ola|hey|hello|start': `Ol√°! Sou o assistente do Daniel. üòä

Posso falar sobre:
‚Ä¢ **Experi√™ncia profissional** e projetos
‚Ä¢ **Tecnologias** e stack t√©cnica
‚Ä¢ **Forma√ß√£o** acad√™mica
‚Ä¢ **Contatos** e redes sociais
‚Ä¢ **Processo de transi√ß√£o** para tecnologia

No que posso ajudar?`,

        // Experi√™ncia profissional
        'experi√™ncia|experiencia|carreira|profissional|trabalho|emprego': `**üíº Experi√™ncia Profissional:**

üöÄ **Desenvolvedor Full Stack** (Aut√¥nomo)
_Jun 2023 - Out 2025 (2 anos 5 meses)_
‚Ä¢ Desenvolvimento de aplica√ß√µes web completas
‚Ä¢ Frontend: React, JavaScript, HTML5, CSS3
‚Ä¢ Backend: Node.js, Python, APIs REST
‚Ä¢ Databases: MongoDB, SQL

üìû **Atendimento ao Cliente** 
_Necxt, Concentrix, TIM Brasil (4+ anos)_
‚Ä¢ Suporte t√©cnico especializado
‚Ä¢ Resolu√ß√£o de problemas complexos
‚Ä¢ Experi√™ncia do cliente

üîß **T√©cnico de Elevadores** (Otis)
_5 anos de experi√™ncia t√©cnica_`,

        // Tecnologias
        'tecnologias|tech|stack|ferramentas|tecnologia|skills|habilidades t√©cnicas': `**üõ† Stack T√©cnica:**

_frontend:_
‚Ä¢ JavaScript (ES6+), React, HTML5, CSS3
‚Ä¢ Responsive Design, Web Performance

_backend:_
‚Ä¢ Node.js, Express, Python
‚Ä¢ REST APIs, Microservices

_databases:_
‚Ä¢ MongoDB, MySQL, PostgreSQL

_ferramentas:_
‚Ä¢ Git, GitHub, Docker
‚Ä¢ AWS, Vercel, Netlify
‚Ä¢ VS Code, Postman

_em aprendizado:_
‚Ä¢ TypeScript, Next.js, GraphQL`,

        // Contato
        'contato|email|telefone|linkedin|github|contatar|falar|contato': `**üìû Contatos do Daniel:**

üìß **Email:** this.daniel@outlook.com
üì± **Telefone:** +55 (11) 94822-2885

**üåê Redes Sociais:**
üíº **LinkedIn:** linkedin.com/in/danielvor
üíª **GitHub:** github.com/danielvor
üåç **Portfolio:** danielvor.vercel.app

**üí¨ Dispon√≠vel para:**
‚Ä¢ Oportunidades de trabalho
‚Ä¢ Projetos freelance
‚Ä¢ Networking
‚Ä¢ Troca de conhecimentos`,

        // Forma√ß√£o
        'forma√ß√£o|formacao|faculdade|ensino|estudos|curso|acad√™mico|academico': `**üéì Forma√ß√£o Acad√™mica:**

**Faculdade IMES** (2025-2027)
‚Ä¢ CST em An√°lise e Desenvolvimento de Sistemas

**Alchemy University**
‚Ä¢ Programa√ß√£o Avan√ßada e Web Development

**ETEC Martin Luther King** (2016-2018)
‚Ä¢ T√©cnico em Mecatr√¥nica

**E.E. Bar√£o de Ramalho**
‚Ä¢ Ensino M√©dio Completo

**üìö Estudando constantemente** novas tecnologias!`,

        // Projetos
        'projetos|portfolio|github|reposit√≥rios|c√≥digo|repositorios|codigo': `**üíª Projetos e GitHub:**

Confira meus projetos em: **github.com/danielvor**

**üéØ Tipos de projetos:**
‚Ä¢ Aplica√ß√µes Full Stack (React + Node.js)
‚Ä¢ APIs REST e microservices
‚Ä¢ Interfaces responsivas e modernas
‚Ä¢ Automa√ß√µes e scripts em Python
‚Ä¢ Projetos de estudo e experimenta√ß√£o

**üîó Portfolio completo:** danielvor.vercel.app

_Todos os projetos com c√≥digo aberto e documenta√ß√£o!_`,

        // Transi√ß√£o de carreira
        'transi√ß√£o|transicao|mudan√ßa|mudanca|carreira|mudou|como come√ßou|como comecou': `**üîÑ Transi√ß√£o de Carreira:**

Daniel fez uma jornada interessante:

1. üõ† **T√©cnico de Elevadores** (5 anos)
   - Desenvolvimento de habilidades t√©cnicas
   - Resolu√ß√£o de problemas complexos

2. üìû **Atendimento ao Cliente** (4+ anos)
   - Desenvolvimento de soft skills
   - Comunica√ß√£o e empatia

3. üíª **Desenvolvedor Full Stack** (Atual)
   - Uni√£o das habilidades t√©cnicas e interpessoais
   - Foco em desenvolvimento web

**üéØ Mostra adaptabilidade e capacidade de aprendizado cont√≠nuo!**`,

        // Default - resposta inteligente
        'default': `Interessante pergunta! ü§î

Baseado no perfil do Daniel, posso te dizer que ele √© um **Desenvolvedor Full Stack** com:

‚Ä¢ üöÄ Experi√™ncia em JavaScript, React, Node.js, Python
‚Ä¢ üìö Cursando An√°lise e Desenvolvimento de Sistemas
‚Ä¢ üíº Background em atendimento ao cliente + habilidades t√©cnicas
‚Ä¢ üåü Foco em c√≥digo limpo e boas pr√°ticas

**Sugest√µes:** posso falar sobre experi√™ncia espec√≠fica, tecnologias, projetos ou como entrar em contato!`
    };

    // Busca a resposta mais relevante
    for (const [keywords, response] of Object.entries(knowledgeBase)) {
        const keyArray = keywords.split('|');
        if (keyArray.some(key => lower.includes(key))) {
            return formatResponse(response);
        }
    }
    
    return formatResponse(knowledgeBase.default);
}

function formatResponse(text) {
    // Formata markdown simples e quebras de linha
    return text
        .replace(/\*\*(.*?)\*\*/g, '<strong>$1</strong>')
        .replace(/\n/g, '<br>')
        .replace(/_([^_]+)_/g, '<em>$1</em>')
        .replace(/\‚Ä¢/g, '‚Ä¢');
}

// Fun√ß√£o principal para enviar mensagem
function sendMessage() {
    const input = document.getElementById('chatbot-input');
    const message = input.value.trim();
    
    if (!message) return;
    
    // Adiciona mensagem do usu√°rio
    addMessage(message, 'user');
    input.value = '';
    
    // Mostra indicador de digita√ß√£o
    showTypingIndicator();
    
    // Simula processamento (pode ser removido se quiser resposta instant√¢nea)
    setTimeout(() => {
        hideTypingIndicator();
        const response = getDanielResponse(message);
        addMessage(response, 'bot');
    }, 1000 + Math.random() * 1000); // Delay natural
}

// Inicializa√ß√£o
document.addEventListener('DOMContentLoaded', function() {
    // Foca no input quando o chatbot abre
    const chatInput = document.getElementById('chatbot-input');
    const chatContainer = document.getElementById('chatbot-container');
    
    chatContainer.addEventListener('click', function() {
        chatInput.focus();
    });
});